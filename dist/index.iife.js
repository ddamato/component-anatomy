!function(){"use strict";class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='<style type="text/css">*, *:before, *:after {\n  box-sizing: border-box;\n}\n\n:host {\n  display: inline-block;\n}\n\n#component-anatomy {\n  display: inline-flex;\n}\n\n:host([orientation=\'vertical\']) #component-anatomy {\n  flex-direction: column;\n}\n\n#area {\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  position: relative;\n  list-style: none;\n  counter-reset: anatomy;\n  align-self: center;\n  flex-shrink: 0;\n  margin-bottom: auto;\n}\n\n#area li:before {  \n  content: counter(anatomy);\n  counter-increment: anatomy;\n}\n\n#pins {\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  inset: 0;\n}\n\n#pins li {\n  position: absolute;\n  border: .1em solid var(--component-anatomy--pin-bg, deeppink);\n  background: var(--component-anatomy--pin-bg, deeppink);\n  color: var(--component-anatomy--pin-fg, white);\n  transform: translate(-50%, -50%) scale(1);\n  width: 1.5em;\n  height: 1.5em;\n  border-radius: 1.5em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: .218s ease;\n}\n\n#pins li[aria-current] {\n  border-color: var(--component-anatomy--pin-hl, currentColor);\n  transform: translate(-50%, -50%) scale(1.2);\n}\n\n:host(:not([edit])) #pins:hover li {\n  transform: translate(-50%, -50%) scale(0.2);\n  color: transparent;\n}\n\n#list {\n  margin: 0;\n  padding: .5em 2.5em;\n}\n\n#list:empty {\n  display: none;\n}\n\n#list li {\n  cursor: pointer;\n}\n\n#list li[contentEditable] {\n  cursor: text;\n}\n\n#list li:not(:last-child) {\n  margin-bottom: .5em;\n}</style> <div id="component-anatomy">\n    <figure id="area">\n      <slot id="slot"></slot>\n      <ol id="pins"></ol>\n    </figure>\n    <ol id="list"></ol>\n  </div>',this._$pins=this.shadowRoot.getElementById("pins"),this._$list=this.shadowRoot.getElementById("list")}static get observedAttributes(){return["definitions","edit"]}attributeChangedCallback(t){"definitions"===t&&this._render(),"edit"===t&&this._edit()}connectedCallback(){this._$pins.addEventListener("click",(t=>this._click(t)))}create({x:t,y:n,term:e},i){if(t&&n&&e)return this._createPin({left:t,top:n},i),this._createDescription(e,i),this}remove(t){return this.definitions=this.definitions.filter(((n,e)=>e!==t)),this}update(t,n){return this.definitions=this.definitions.map(((e,i)=>i===t?Object.assign(e,n):e)),this}_attributes(t){this.edit?t.setAttribute("contentEditable",""):t.removeAttribute("contentEditable")}_blur(t){const{textContent:n}=this._$list.children[t];n.trim()?this.update(t,{term:n}):this.remove(t)}_clear(){return this._$pins.innerHTML="",this._$list.innerHTML="",this}_click({offsetX:t,offsetY:n}){if(!this.edit)return;const{offsetWidth:e,offsetHeight:i}=this._$pins,[s,o]=[t/e,n/i].map((t=>`${Math.round(100*t)}%`));this.definitions=[].concat(this.definitions,{x:s,y:o,term:this.getAttribute("placeholder")||"placeholder"}).filter(Boolean)}_createDescription(t,n){const e=document.createElement("li");e.textContent=t,this._attributes(e),e.id=`item-${n}`,e.addEventListener("mouseenter",(()=>this._mouseenter(n))),e.addEventListener("mouseleave",(()=>this._mouseleave(n))),e.addEventListener("blur",(()=>this._blur(n))),this._$list.appendChild(e)}_createPin(t,n){const e=document.createElement("li");Object.assign(e.style,t),e.setAttribute("aria-describedby",`item-${n}`),e.tabIndex=0,this._$pins.appendChild(e)}_edit(){[...this._$list.children].forEach(this._attributes,this)}_index(t){if(t!==this._$list)return[...this._$list.children].indexOf(t)}_mouseenter(t){this._$pins.children[t].setAttribute("aria-current","")}_mouseleave(t){this._$pins.children[t].removeAttribute("aria-current")}_render(){this._clear(),this.definitions.forEach(this.create,this)}get definitions(){try{const t=JSON.parse(window.atob(this.getAttribute("definitions")));return[].concat(t).filter(Boolean)}catch(t){return[]}}set definitions(t){t&&t.length||this.removeAttribute("definitions"),"object"==typeof t&&this.setAttribute("definitions",window.btoa(JSON.stringify(t)))}get edit(){return this.hasAttribute("edit")}set edit(t){t?this.setAttribute("edit",""):this.removeAttribute("edit")}}window.customElements.define("component-anatomy",t)}();
